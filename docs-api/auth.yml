openapi: 3.0.0
info:
  title: Chill Ajar Auth API
  version: 1.0.0
  description: Dokumentasi endpoint autentikasi (register, login, logout) untuk Chill Ajar. Menggunakan Laravel Sanctum (token-based authentication).

servers:
  - url: http://localhost:8000

paths:
  /api/login:
    post:
      summary: Login pengguna (pelanggan/mentor/admin)
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
            example:
              email: eko@example.com
              password: passwordku
      responses:
        "200":
          description: Login berhasil
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
              example:
                message: Login berhasil
                token: "eyJ0eXAiOiJKV1QiLCJhbGciOi..."
                user:
                  id: 1
                  nama: Eko Muchamad Haryono
                  email: eko@example.com
                  peran: pelanggan
                  nomorTelepon: "08123456789"
                  alamat: Jl. Kampus No. 1
        "401":
          description: Login gagal
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
              example:
                message: Tidak sah
  /api/register:
    post:
      summary: Registrasi pengguna baru (pelanggan/mentor)
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/RegisterPelanggan"
                - $ref: "#/components/schemas/RegisterMentor"
            examples:
              pelanggan:
                summary: Register Pelanggan
                value:
                  peran: pelanggan
                  nama: Eko Muchamad Haryono
                  email: eko@example.com
                  password: passwordku
                  nomorTelepon: "08123456789"
                  alamat: Jl. Kampus No. 1
              mentor:
                summary: Register Mentor
                value:
                  peran: mentor
                  nama: Fatiya Labibah
                  email: fatiya@example.com
                  password: passwordmentor
                  biayaPerSesi: 100000
                  gayaMengajar: Santai
                  deskripsi: Berpengalaman mengajar
                  nomorTelepon: "081298765432"
                  alamat: Jl. Mentor No. 2
      responses:
        "201":
          description: Registrasi berhasil
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/RegisterPelangganResponse"
                  - $ref: "#/components/schemas/RegisterMentorResponse"
              examples:
                pelanggan:
                  summary: Response Register Pelanggan
                  value:
                    message: Pelanggan berhasil terdaftar
                    user:
                      id: 2
                      nama: Eko Muchamad Haryono
                      email: eko@example.com
                      peran: pelanggan
                      nomorTelepon: "08123456789"
                      alamat: Jl. Kampus No. 1
                    pelanggan: {}
                    token: "eyJ0eXAiOiJKV1QiLCJhbGciOi..."
                mentor:
                  summary: Response Register Mentor
                  value:
                    message: Mentor berhasil terdaftar
                    user:
                      id: 3
                      nama: Fatiya Labibah
                      email: fatiya@example.com
                      peran: mentor
                      nomorTelepon: "081298765432"
                      alamat: Jl. Mentor No. 2
                    mentor: {}
                    token: "eyJ0eXAiOiJKV1QiLCJhbGciOi..."
        "422":
          description: Validasi gagal
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
              example:
                message: The given data was invalid.
                errors:
                  email:
                    - The email has already been taken.
  /api/logout:
    post:
      summary: Logout pengguna (wajib token)
      tags: [Auth]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Logout berhasil
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogoutResponse"
              example:
                message: Logout berhasil
        "401":
          description: Tidak terautentikasi
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
              example:
                message: Tidak sah
  /api/user:
    get:
      summary: Mendapatkan data user yang sedang login (wajib token)
      tags: [Auth]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Data user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
              example:
                id: 1
                nama: Eko Muchamad Haryono
                email: eko@example.com
                peran: pelanggan
                nomorTelepon: "08123456789"
                alamat: Jl. Kampus No. 1
        "401":
          description: Tidak terautentikasi
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
              example:
                message: Tidak sah
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RegisterPelanggan:
      type: object
      required: [peran, nama, email, password, nomorTelepon, alamat]
      properties:
        peran:
          type: string
          enum: [pelanggan]
        nama:
          type: string
        email:
          type: string
        password:
          type: string
        nomorTelepon:
          type: string
        alamat:
          type: string
    RegisterMentor:
      type: object
      required:
        [peran, nama, email, password, biayaPerSesi, nomorTelepon, alamat]
      properties:
        peran:
          type: string
          enum: [mentor]
        nama:
          type: string
        email:
          type: string
        password:
          type: string
        biayaPerSesi:
          type: number
        gayaMengajar:
          type: string
        deskripsi:
          type: string
        nomorTelepon:
          type: string
        alamat:
          type: string
    RegisterPelangganResponse:
      type: object
      properties:
        message:
          type: string
        user:
          $ref: "#/components/schemas/User"
        pelanggan:
          type: object
        token:
          type: string
    RegisterMentorResponse:
      type: object
      properties:
        message:
          type: string
        user:
          $ref: "#/components/schemas/User"
        mentor:
          type: object
        token:
          type: string
    LoginRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
        password:
          type: string
    LoginResponse:
      type: object
      properties:
        message:
          type: string
        token:
          type: string
        user:
          $ref: "#/components/schemas/User"
    LogoutResponse:
      type: object
      properties:
        message:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
        nama:
          type: string
        email:
          type: string
        peran:
          type: string
        nomorTelepon:
          type: string
        alamat:
          type: string
    ValidationError:
      type: object
      properties:
        message:
          type: string
        errors:
          type: object
    UnauthorizedError:
      type: object
      properties:
        message:
          type: string
