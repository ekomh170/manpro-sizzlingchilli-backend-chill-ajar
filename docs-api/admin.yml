openapi: 3.0.3
info:
  title: Admin API
  version: 1.0.0
  description: Dokumentasi endpoint AdminController untuk manajemen user, mentor, pelanggan, dan notifikasi. CRUD Kursus, Sesi, dan Pembayaran ada di controller masing-masing.
servers:
  - url: http://localhost:8000/api
paths:
  /admin/users:
    get:
      summary: Daftar semua pengguna
      tags: [Admin]
      responses:
        "200":
          description: Daftar pengguna
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    post:
      summary: Tambah pengguna baru (admin/mentor/pelanggan)
      tags: [Admin]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInput"
            example:
              nama: "Budi Santoso"
              email: "budi@example.com"
              password: "password123"
              peran: "mentor"
              deskripsi: "Berpengalaman mengajar matematika SMA."
              biayaPerSesi: 150000
              gayaMengajar: "Online"
      responses:
        "201":
          description: Pengguna berhasil ditambah
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
  /admin/users/{userId}/role:
    put:
      summary: Ubah role pengguna
      tags: [Admin]
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                peran:
                  type: string
                  enum: [admin, mentor, pelanggan]
            example:
              peran: "mentor"
      responses:
        "200":
          description: Role pengguna berhasil diperbarui
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
  /admin/mentor:
    get:
      summary: Daftar mentor
      tags: [Admin]
      responses:
        "200":
          description: Daftar mentor
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Mentor"
    post:
      summary: Tambah mentor langsung
      tags: [Admin]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInput"
            example:
              nama: "Mentor Baru"
              email: "mentorbaru@example.com"
              password: "password123"
              peran: "mentor"
              deskripsi: "Ahli Fisika"
              biayaPerSesi: 200000
              gayaMengajar: "Offline"
      responses:
        "201":
          description: Mentor berhasil ditambah
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
  /admin/mentor/{id}:
    get:
      summary: Detail mentor
      tags: [Admin]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Detail mentor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Mentor"
    put:
      summary: Update mentor
      tags: [Admin]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                deskripsi:
                  type: string
                biayaPerSesi:
                  type: number
                gayaMengajar:
                  type: string
            example:
              deskripsi: "Update deskripsi"
              biayaPerSesi: 180000
              gayaMengajar: "Online"
      responses:
        "200":
          description: Mentor berhasil diperbarui
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Mentor"
    delete:
      summary: Hapus mentor
      tags: [Admin]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Mentor berhasil dihapus
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /admin/pelanggan:
    get:
      summary: Daftar pelanggan
      tags: [Admin]
      responses:
        "200":
          description: Daftar pelanggan
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Pelanggan"
    post:
      summary: Tambah pelanggan langsung
      tags: [Admin]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInput"
            example:
              nama: "Pelanggan Baru"
              email: "pelangganbaru@example.com"
              password: "password123"
              peran: "pelanggan"
              nomorTelepon: "08123456789"
              alamat: "Jl. Mawar No. 1"
      responses:
        "201":
          description: Pelanggan berhasil ditambah
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
  /admin/pelanggan/{id}:
    get:
      summary: Detail pelanggan
      tags: [Admin]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Detail pelanggan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pelanggan"
    put:
      summary: Update pelanggan
      tags: [Admin]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nomorTelepon:
                  type: string
                alamat:
                  type: string
            example:
              nomorTelepon: "08123456789"
              alamat: "Jl. Melati No. 2"
      responses:
        "200":
          description: Pelanggan berhasil diperbarui
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pelanggan"
    delete:
      summary: Hapus pelanggan
      tags: [Admin]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Pelanggan berhasil dihapus
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /admin/notifikasi/mentor/{sessionId}:
    post:
      summary: Kirim notifikasi ke mentor setelah pembayaran diverifikasi
      tags: [Admin]
      parameters:
        - in: path
          name: sessionId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Notifikasi ke mentor telah dikirim
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Notifikasi ke mentor telah dikirim (simulasi)
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        nama:
          type: string
        email:
          type: string
        peran:
          type: string
        nomorTelepon:
          type: string
        alamat:
          type: string
    UserInput:
      type: object
      properties:
        nama:
          type: string
        email:
          type: string
        password:
          type: string
        peran:
          type: string
        deskripsi:
          type: string
        biayaPerSesi:
          type: number
        gayaMengajar:
          type: string
        nomorTelepon:
          type: string
        alamat:
          type: string
    UserResponse:
      type: object
      properties:
        message:
          type: string
        user:
          $ref: "#/components/schemas/User"
    Mentor:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        deskripsi:
          type: string
        biayaPerSesi:
          type: number
        gayaMengajar:
          type: string
        user:
          $ref: "#/components/schemas/User"
    Pelanggan:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        nomorTelepon:
          type: string
        alamat:
          type: string
        user:
          $ref: "#/components/schemas/User"
